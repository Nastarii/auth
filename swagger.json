{
    "openapi": "3.0.0",
    "info": {
        "title": "Authentication API",
        "version": "1.0.0",
        "description": "The authentication API designed for this project follows a microservices architecture, leveraging the Node.js runtime environment, MySQL database, and Docker containerization for its implementation. The modular structure of the microservices facilitates flexibility and maintainability, allowing for seamless integration with other services within the larger system. Engineered to deliver robust, scalable, and secure authentication services within a microservices architecture."
    },
    "paths": {
        "/sign/in": {
            "post": {
                "tags": [
                    "Registration Control"
                ],
                "summary": "Sign in: create a new client",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sign In"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Client created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/sign/out": {
            "delete": {
                "tags": [
                    "Registration Control"
                ],
                "security": [
                    {
                       "bearerAuth": []
                    }
                 ],
                "summary": "Sign out: delete a client by ID",
                "responses": {
                    "204": {
                        "description": "Client deleted successfully"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            }
        },
        "/email/resend": {
            "post": {
                "tags": [
                    "Client Validation"
                ],
                "summary": "Resend Confirmation Email to verify a client",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Email"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client recovered successfully"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            }
        },
        "/email/recover": {
            "post": {
                "tags": [
                    "Client Validation"
                ],
                "summary": "Recover a client password by Email",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Email"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client recovered successfully"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            }
        },
        "/email/verify": {
            "get": {
                "tags": [
                    "Client Validation"
                ],
                "summary": "Verify a client by token",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client verified successfully"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            }
        },
        "/email/verify/activationCode": {
            "post": {
                "tags": [
                    "Client Validation"
                ],
                "security": [
                    {
                       "bearerAuth": []
                    }
                 ],
                "summary": "Verify a client by activation code",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Activation Code"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client verified successfully"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            }
        },
        "/log/in": {
            "post": {
                "tags": [
                    "Access Control"
                ],
                "summary": "Log in: Enable client access to the system",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Log in"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Client created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/log/out": {
            "get": {
                "security": [
                    {
                       "bearerAuth": []
                    }
                 ],
                "tags": [
                    "Access Control"
                ],
                "summary": "Log out: Disable client access to the system",
                "responses": {
                    "204": {
                        "description": "Client deleted successfully"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "tags": [
                    "Protected Routes"
                ],
                "security": [
                    {
                       "bearerAuth": []
                    }
                 ],
                "summary": "Get a client by ID",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            }
        },
        "/clients/update": {
            "put": {
                "tags": [
                    "Protected Routes"
                ],
                "security": [
                    {
                       "bearerAuth": []
                    }
                 ],
                "summary": "Update a client by ID",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sign In"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated successfully"
                    },
                    "404": {
                        "description": "Client not found"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "Sign In": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "lastname": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "Log in": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    }
                }
            },
            "Email": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    }
                }
            },
            "Activation Code": {
                "type": "object",
                "properties": {
                    "activationCode": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
